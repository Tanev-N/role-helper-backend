openapi: 3.0.3
info:
  title: DnD Characters API
  version: 1.0.0
  description: |
    API для управления персонажами Dungeons & Dragons с полной поддержкой характеристик из официального листа персонажа.
    
    ## Автоматические расчеты
    
    Система автоматически рассчитывает производные характеристики:
    - **Модификаторы характеристик** - всегда рассчитываются по формуле (значение - 10) / 2
    - **Производные характеристики** - рассчитываются только если переданы как 0:
      - **Бонус мастерства** - рассчитывается по уровню
      - **Инициатива** - равна модификатору ловкости
      - **Максимальные хиты** - рассчитываются по кости хитов и уровню
    - **Модификаторы навыков** - рассчитываются автоматически, если равны 0
    
    ## Упрощенные структуры
    
    - **Equipment** - только название и описание
    - **Spell** - только название и описание
    - **Без полей времени** - нет created_at и updated_at
    
    ## Примеры использования
    
    **Частичное обновление (только модификаторы пересчитаются):**
    ```json
    {
      "name": "Новое имя",
      "level": 20,
      "strength": 22
    }
    ```
    
    **Принудительный пересчет производных характеристик:**
    ```json
    {
      "proficiency_bonus": 0,  // пересчитается автоматически
      "initiative": 0,         // пересчитается автоматически
      "max_hit_points": 0      // пересчитается автоматически
    }
    ```
servers:
  - url: http://localhost:8080
tags:
  - name: characters
    description: Работа с персонажами DnD
  - name: auth
    description: Аутентификация и регистрация пользователей

paths:
  /api/characters:
    post:
      tags: [characters]
      summary: Создание нового персонажа
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CharacterCreate"
      responses:
        "201":
          description: Персонаж успешно создан
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Character"
    get:
      tags: [characters]
      summary: Получение списка всех персонажей
      responses:
        "200":
          description: Список персонажей
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CharacterShort"

  /api/characters/{id}:
    get:
      tags: [characters]
      summary: Получение характеристик персонажа по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Характеристики персонажа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Character"
        "404":
          description: Персонаж не найден

    put:
      tags: [characters]
      summary: Обновление характеристик персонажа
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CharacterUpdate"
      responses:
        "200":
          description: Персонаж обновлён
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Character"
        "404":
          description: Персонаж не найден

    delete:
      tags: [characters]
      summary: Удаление персонажа по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Персонаж удалён
        "404":
          description: Персонаж не найден

  /api/auth/register:
    post:
      tags: [auth]
      summary: Регистрация пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserRegister"
      responses:
        "201":
          description: Пользователь зарегистрирован
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /api/auth/login:
    post:
      tags: [auth]
      summary: Вход пользователя
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserLogin"
      responses:
        "200":
          description: Успешный вход
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"

  /api/auth/logout:
    post:
      tags: [auth]
      summary: Выход (удаление токена)
      responses:
        "204":
          description: Пользователь вышел

components:
  schemas:
    Character:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "Арагорн"
        race:
          type: string
          example: "Человек"
        class:
          type: string
          example: "Следопыт"
        level:
          type: integer
          example: 5
        alignment:
          type: string
          example: "Законно-добрый"
        background:
          type: string
          example: "Народный герой"
        player_name:
          type: string
          example: "Игрок1"
        experience:
          type: integer
          example: 6500
        strength:
          type: integer
          example: 16
        dexterity:
          type: integer
          example: 14
        constitution:
          type: integer
          example: 15
        intelligence:
          type: integer
          example: 12
        wisdom:
          type: integer
          example: 16
        charisma:
          type: integer
          example: 13
        strength_mod:
          type: integer
          example: 3
        dexterity_mod:
          type: integer
          example: 2
        constitution_mod:
          type: integer
          example: 2
        intelligence_mod:
          type: integer
          example: 1
        wisdom_mod:
          type: integer
          example: 3
        charisma_mod:
          type: integer
          example: 1
        proficiency_bonus:
          type: integer
          example: 3
        initiative:
          type: integer
          example: 2
        armor_class:
          type: integer
          example: 14
        speed:
          type: integer
          example: 30
        hit_points:
          type: integer
          example: 45
        max_hit_points:
          type: integer
          example: 45
        temp_hit_points:
          type: integer
          example: 0
        hit_dice:
          type: string
          example: "1d10"
        strength_save:
          type: boolean
          example: false
        dexterity_save:
          type: boolean
          example: true
        constitution_save:
          type: boolean
          example: false
        intelligence_save:
          type: boolean
          example: false
        wisdom_save:
          type: boolean
          example: true
        charisma_save:
          type: boolean
          example: false
        skills:
          type: array
          items:
            $ref: "#/components/schemas/CharacterSkill"
        personality_traits:
          type: string
          example: "Я всегда готов помочь тем, кто в беде..."
        ideals:
          type: string
          example: "Защита невинных и слабых - мой долг."
        bonds:
          type: string
          example: "Я поклялся защищать народы Средиземья..."
        flaws:
          type: string
          example: "Я слишком доверяю людям..."
        proficiencies:
          type: string
          example: "Легкие и средние доспехи, щиты..."
        languages:
          type: string
          example: "Общий, эльфийский, синдарин"
        senses:
          type: string
          example: "Пассивная внимательность 16"
        equipment:
          type: array
          items:
            $ref: "#/components/schemas/Equipment"
        spells:
          type: array
          items:
            $ref: "#/components/schemas/Spell"
        features:
          type: string
          example: "Любимая местность: Лес, Любимый враг: Орки..."
        photo:
          type: string
          example: "https://example.com/aragorn.jpg"

    CharacterCreate:
      type: object
      required:
        - name
        - race
        - class
        - level
        - strength
        - dexterity
        - constitution
        - intelligence
        - wisdom
        - charisma
      properties:
        name:
          type: string
          example: "Арагорн"
        race:
          type: string
          example: "Человек"
        class:
          type: string
          example: "Следопыт"
        level:
          type: integer
          example: 5
        alignment:
          type: string
          example: "Законно-добрый"
        background:
          type: string
          example: "Народный герой"
        player_name:
          type: string
          example: "Игрок1"
        experience:
          type: integer
          example: 6500
        strength:
          type: integer
          example: 16
        dexterity:
          type: integer
          example: 14
        constitution:
          type: integer
          example: 15
        intelligence:
          type: integer
          example: 12
        wisdom:
          type: integer
          example: 16
        charisma:
          type: integer
          example: 13
        proficiency_bonus:
          type: integer
          example: 0
        initiative:
          type: integer
          example: 0
        armor_class:
          type: integer
          example: 14
        speed:
          type: integer
          example: 30
        hit_points:
          type: integer
          example: 0
        max_hit_points:
          type: integer
          example: 0
        temp_hit_points:
          type: integer
          example: 0
        hit_dice:
          type: string
          example: "1d10"
        strength_save:
          type: boolean
          example: false
        dexterity_save:
          type: boolean
          example: true
        constitution_save:
          type: boolean
          example: false
        intelligence_save:
          type: boolean
          example: false
        wisdom_save:
          type: boolean
          example: true
        charisma_save:
          type: boolean
          example: false
        skills:
          type: array
          items:
            $ref: "#/components/schemas/CharacterSkill"
        personality_traits:
          type: string
          example: "Я всегда готов помочь тем, кто в беде..."
        ideals:
          type: string
          example: "Защита невинных и слабых - мой долг."
        bonds:
          type: string
          example: "Я поклялся защищать народы Средиземья..."
        flaws:
          type: string
          example: "Я слишком доверяю людям..."
        proficiencies:
          type: string
          example: "Легкие и средние доспехи, щиты..."
        languages:
          type: string
          example: "Общий, эльфийский, синдарин"
        senses:
          type: string
          example: "Пассивная внимательность 16"
        equipment:
          type: array
          items:
            $ref: "#/components/schemas/Equipment"
        spells:
          type: array
          items:
            $ref: "#/components/schemas/Spell"
        features:
          type: string
          example: "Любимая местность: Лес, Любимый враг: Орки..."
        photo:
          type: string
          example: "https://example.com/aragorn.jpg"

    CharacterUpdate:
      type: object
      description: |
        Поля, которые можно обновить (любая характеристика). 
        
        **Логика автоматических расчетов:**
        - Модификаторы характеристик (strength_mod, dexterity_mod, etc.) всегда пересчитываются автоматически
        - Производные характеристики (proficiency_bonus, initiative, max_hit_points) пересчитываются только если переданы как 0
        - Для принудительного пересчета передайте 0 в нужном поле
      properties:
        name:
          type: string
        race:
          type: string
        class:
          type: string
        level:
          type: integer
        alignment:
          type: string
        background:
          type: string
        player_name:
          type: string
        experience:
          type: integer
        strength:
          type: integer
        dexterity:
          type: integer
        constitution:
          type: integer
        intelligence:
          type: integer
        wisdom:
          type: integer
        charisma:
          type: integer
        proficiency_bonus:
          type: integer
          description: "Бонус мастерства. Передайте 0 для автопересчета по уровню"
        initiative:
          type: integer
          description: "Инициатива. Передайте 0 для автопересчета по модификатору ловкости"
        armor_class:
          type: integer
        speed:
          type: integer
        hit_points:
          type: integer
        max_hit_points:
          type: integer
          description: "Максимальные хиты. Передайте 0 для автопересчета по уровню и кости хитов"
        temp_hit_points:
          type: integer
        hit_dice:
          type: string
        strength_save:
          type: boolean
        dexterity_save:
          type: boolean
        constitution_save:
          type: boolean
        intelligence_save:
          type: boolean
        wisdom_save:
          type: boolean
        charisma_save:
          type: boolean
        skills:
          type: array
          items:
            $ref: "#/components/schemas/CharacterSkill"
        personality_traits:
          type: string
        ideals:
          type: string
        bonds:
          type: string
        flaws:
          type: string
        proficiencies:
          type: string
        languages:
          type: string
        senses:
          type: string
        equipment:
          type: array
          items:
            $ref: "#/components/schemas/Equipment"
        spells:
          type: array
          items:
            $ref: "#/components/schemas/Spell"
        features:
          type: string
        photo:
          type: string

    CharacterShort:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        name:
          type: string
          example: "Арагорн"
        photo:
          type: string
          example: "https://example.com/aragorn.jpg"

    CharacterSkill:
      type: object
      properties:
        name:
          type: string
          example: "Атлетика"
        modifier:
          type: integer
          example: 3
        proficient:
          type: boolean
          example: true
        ability:
          type: string
          example: "Сила"

    Equipment:
      type: object
      properties:
        name:
          type: string
          example: "Меч +1"
        description:
          type: string
          example: "Магический меч с бонусом к атаке"

    Spell:
      type: object
      properties:
        name:
          type: string
          example: "Лечение ран"
        description:
          type: string
          example: "Восстанавливает 1d8+1 хитов"

    User:
      type: object
      properties:
        id:
          type: string
          example: "550e8400-e29b-41d4-a716-446655440000"
        username:
          type: string
          example: "e2e_user"
        avatar_url:
          type: string
          example: "https://example.com/avatar.png"

    UserRegister:
      type: object
      required:
        - username
        - password
        - repassword
      properties:
        username:
          type: string
        password:
          type: string
        repassword:
          type: string

    UserLogin:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    TokenResponse:
      type: object
      properties:
        token:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "description of the error"

